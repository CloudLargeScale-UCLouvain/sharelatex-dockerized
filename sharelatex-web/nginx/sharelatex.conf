server {
	listen         80;
	server_name    _; # Catch all, see http://nginx.org/en/docs/http/server_names.html

	set $static_path /app/public;

	location / {
		proxy_pass http://127.0.0.1:3000;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_read_timeout 3m;
		proxy_send_timeout 3m;
	}
	
	location /socket.io {
		set $backend "SHARELATEX_REAL_TIME_URL";
		proxy_pass $backend;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_read_timeout 3m;
		proxy_send_timeout 3m;

		proxy_set_header Accept-Encoding "";
        set $wsredirect "f=c.util";
        sub_filter "f=c.util" $wsredirect;
        sub_filter_types *;
        sub_filter_once off;

        if ($http_referer ~* /project/PID) {
                set $wsredirect "e.port+='/redirect_ws',f=c.util";
                proxy_pass http://192.168.56.1:3026;
                break;
        }
	}

	location /redirect_ws{
        rewrite /redirect_ws/(.*) /$1  break;
        proxy_pass "SHARELATEX_REAL_TIME_URL_FWD";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

	location /stylesheets {
		expires 1y;
		root $static_path/;
	}

	location /minjs {
		expires 1y;
		root $static_path/;
	}

	location /img {
		expires 1y;
		root $static_path/;
	}
}